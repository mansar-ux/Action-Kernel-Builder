name: Android Kernel Build

on:
  workflow_dispatch:
    inputs:
      kernel_repo_url:
        description: 'Full HTTPS URL to the kernel source repository (e.g., https://github.com/user/repo.git)'
        required: true
      branch:
        description: 'Branch name of the kernel repository'
        required: true
      defconfig:
        description: 'Name of the defconfig file (e.g., vendor_device_defconfig)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the workflow repository
      - name: Checkout workflow repository
        uses: actions/checkout@v4

      # Install dependencies
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush schedtool squashfs-tools xsltproc zip zlib1g-dev

      # Setup ccache
      - name: Setup ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ github.sha }}
          restore-keys: ccache-

      # Clone kernel source
      - name: Clone kernel source
        run: |
          git clone --depth 1 ${{ github.event.inputs.kernel_repo_url }} -b ${{ github.event.inputs.branch }} kernel

      # Clone toolchains
      - name: Clone toolchains
        run: |
          mkdir -p toolchains
          # Download and extract Clang
          curl -L https://github.com/ZyCromerZ/Clang/releases/download/21.0.0git-20250607-release/Clang-21.0.0git-20250607.tar.gz | tar -xz -C toolchains
          # Clone Aarch64 GCC
          git clone --depth 1 https://github.com/radcolor/aarch64-linux-gnu.git toolchains/aarch64-linux-gnu
          # Clone ARM GCC
          git clone --depth 1 https://github.com/radcolor/arm-linux-gnueabi.git toolchains/arm-linux-gnueabi

      # Clone AnyKernel3
      - name: Clone AnyKernel3
        run: |
          git clone --depth 1 https://github.com/cumaRull/AnyKernel3.git -b master AnyKernel3

      # Set up environment
      - name: Set up environment
        run: |
          export PATH=$PWD/toolchains/clang/bin:$PWD/toolchains/aarch64-linux-gnu/bin:$PWD/toolchains/arm-linux-gnueabi/bin:$PATH
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
          export CC=clang
          export CLANG_TRIPLE=aarch64-linux-gnu-

      # Build kernel
      - name: Build kernel
        working-directory: kernel
        run: |
          make O=out ${{ github.event.inputs.defconfig }}
          make O=out -j$(nproc --all)

      # Package kernel with AnyKernel3
      - name: Package kernel
        working-directory: kernel
        run: |
          cp out/arch/arm64/boot/Image.gz-dtb ../AnyKernel3/
          cd ../AnyKernel3
          zip -r9 Kernel.zip . -x .git README.md *placeholder

      # Upload artifact
      - name: Upload kernel zip
        uses: actions/upload-artifact@v4
        with:
          name: Kernel
          path: AnyKernel3/Kernel.zip
